[tox]
envlist = py{37,38,39,310,311}, docs
skip_missing_interpreters = true

[testenv]
whitelist_externals = cp
deps = -rrequirements-tests.txt
install_command = pip install --upgrade {packages}
passenv = PYTHONASYNCIODEBUG
usedevelop = True
commands = {envbindir}/pytest \
               {posargs:\
               --color=yes \
               --log-format='%(levelname)s %(relativeCreated)2.2f %(filename)s:%(lineno)d %(message)s' \
               --cov={toxinidir}/telnetlib3 \
               --cov-config={toxinidir}/.coveragerc \
               --strict --verbose --verbose \
               --junit-xml=results.{envname}.xml \
               --durations=10 \
               } telnetlib3/tests

[testenv:develop]
basepython = python3.8
commands = {posargs:{envbindir}/pytest \
               --capture=no \
               --looponfail \
               --log-format='%(relativeCreated)2.2f %(filename)s:%(lineno)d %(message)s' \
               --strict \
               --verbose \
               --verbose \
               --color=yes \
               --cov={toxinidir}/telnetlib3 \
               --cov-config={toxinidir}/.coveragerc \
               --cov-report=html \
               --durations=1 \
               telnetlib3/tests }

# report coverage to coveralls
[testenv:coveralls]
passenv = COVERALLS_REPO_TOKEN
deps = coveralls
commands = coveralls --verbose --rcfile={toxinidir}/.coveragerc

[testenv:sa]
# perform static analysis and style enforcement
# Disabled: needs to be brought up-to-date
basepython = python3.6
deps = -rrequirements-tests.txt
       -rrequirements-analysis.txt
commands = python -m compileall -fq {toxinidir}/telnetlib3
           {envbindir}/rst-lint README.rst
           {envbindir}/doc8 --ignore-path docs/_build --ignore D000 docs
           {envbindir}/black

[testenv:docs]
# build html documentation
whitelist_externals = echo
basepython = python3.8
deps = -rrequirements-docs.txt
commands = {envbindir}/sphinx-build -W -E -v -n \
               -d {toxinidir}/docs/_build/doctrees \
               {posargs:-b html} docs \
               {toxinidir}/docs/_build/html
           echo "==> open [1;36mdocs/_build/html/index.html[0m for review."

[pytest]
looponfailroots = telnetlib3
norecursedirs = .git .tox
asyncio_mode = auto
log_level = debug
