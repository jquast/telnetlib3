[tox]
envlist = py{38,39,310,311,312,313}, docs
skip_missing_interpreters = true

[testenv]
whitelist_externals = cp
deps = -rrequirements-tests.txt
install_command = pip install --upgrade {packages}
passenv = PYTHONASYNCIODEBUG
usedevelop = True
commands = {envbindir}/pytest {posargs} telnetlib3/tests

# report coverage to coveralls
[testenv:coveralls]
passenv = COVERALLS_REPO_TOKEN
deps = coveralls
commands = coveralls --verbose --rcfile={toxinidir}/.coveragerc

[testenv:sa]
# perform static analysis and style enforcement
# Disabled: needs to be brought up-to-date
basepython = python3.13
deps = -rrequirements-tests.txt
       -rrequirements-analysis.txt
commands = python -m compileall -fq {toxinidir}/telnetlib3
           {envbindir}/rst-lint README.rst
           {envbindir}/doc8 --ignore-path docs/_build --ignore D000,D001 docs
           {envbindir}/black .

[testenv:docs]
# build html documentation, roughly matches .readthedocs.yaml settings
whitelist_externals = echo
basepython = python3.12
deps = -rrequirements-docs.txt
commands = {envbindir}/sphinx-build -E -a -v -n \
               -d {toxinidir}/docs/_build/doctrees \
               {posargs:-b html} docs \
               {toxinidir}/docs/_build/html

[pytest]
norecursedirs = .git .tox
asyncio_mode = auto
log_level = debug
log_format = %(levelname)8s %(filename)s:%(lineno)s %(message)s
# set this to display all log output, even when tests succeed
#log_cli = 1
addopts =
    --strict
    --verbose
    --verbose
    --color=yes
    --cov
    --cov-append
    --cov-report=xml
    --disable-pytest-warnings
    --ignore=setup.py
    --ignore=.tox
    --durations=10
    --timeout=15
    --junit-xml=.tox/results.{envname}.xml

[coverage:run]
branch = True
parallel = True
source = telnetlib3
omit = telnetlib3/tests/*
data_file = .coverage.${TOX_ENV_NAME}

[coverage:report]
precision = 1
exclude_lines = pragma: no cover
omit = telnetlib3/tests/*

[coverage:paths]
source = telnetlib3/
