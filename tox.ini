[tox]
envlist = py{33,34,35}, coverage
skip_missing_interpreters = true

[testenv]
whitelist_externals = cp
setenv = PYTHONIOENCODING=UTF8
deps = -rrequirements-tests.txt
install_command = pip install --upgrade {packages}
usedevelop = True
commands = {envbindir}/py.test {posargs:\
               --log-format='%(relativeCreated)2.2f %(filename)s:%(lineno)d %(message)s' \
               --cov={toxinidir}/telnetlib3 \
               --cov-config={toxinidir}/.coveragerc \
               --strict --verbose --verbose \
               --color=yes --junit-xml=results.{envname}.xml telnetlib3/tests}
           coverage combine
           cp {toxinidir}/.coverage \
               {toxinidir}/._coverage.{envname}.{env:COVERAGE_ID:local}
           {toxinidir}/tools/custom-combine.py

# CI buildchain target
[testenv:coverage]
basepython = python3.5
commands = {toxinidir}/tools/custom-combine.py

# CI buildhcain target
[testenv:coveralls]
passenv = COVERALLS_REPO_TOKEN
deps = coveralls
commands = coveralls

[testenv:sa]
basepython = python3.4
deps = -rrequirements-analysis.txt
commands = python -m compileall -fq {toxinidir}/telnetlib3
           {envbindir}/prospector \
               {toxinidir}
           {envbindir}/rst-lint README.rst
           {envbindir}/doc8 --ignore-path docs/_build --ignore D000 docs

[testenv:sphinx]
whitelist_externals = echo
basepython = python3.4
deps = -rrequirements-docs.txt
commands = {envbindir}/sphinx-build -v -W \
               -d {toxinidir}/docs/_build/doctrees \
               {posargs:-b html} docs \
               {toxinidir}/docs/_build/html
           echo "--> open docs/_build/html/index.html for review."

[pytest]
looponfailroots = telnetlib3 ../pexpect
norecursedirs = .git .tox
